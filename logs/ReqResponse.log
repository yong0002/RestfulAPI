[2022-10-15 19:22:41,499] [http-nio-8080-exec-2] INFO com.example.logging.LoggingFilter filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; REQUESTBODY = {
   "id": 4
}; RESPONSE CODE = 200; RESPONSEBODY = [{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"}]
[2022-10-15 23:15:02,547] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployee; REQUESTBODY = ; RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":2,"name":"HI","age":22,"dob":"2022-09-02","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"},{"id":5,"name":"Orlando","age":25,"dob":"2022-09-05","telephoneNumber":"0314514123"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"}]
[2022-10-15 23:15:31,801] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployee; REQUESTBODY = ; RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":2,"name":"HI","age":22,"dob":"2022-09-02","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"},{"id":5,"name":"Orlando","age":25,"dob":"2022-09-05","telephoneNumber":"0314514123"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"}]
[2022-10-15 23:16:48,309] [http-nio-8080-exec-6] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/createEmployee; REQUESTBODY = {
    "name": "POONG",
    "age": 23,
    "dob":"1998-07-01",
    "telephoneNumber":"0123105349"
}; RESPONSE CODE = 200; RESPONSEBODY = Successfully Inserted into Database
[2022-10-15 23:17:15,206] [http-nio-8080-exec-7] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/createEmployee; REQUESTBODY = ; RESPONSE CODE = 405; RESPONSEBODY = 
[2022-10-15 23:59:20,813] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getNoOfEmployeesbyPage; REQUESTBODY = ; RESPONSE CODE = 200; RESPONSEBODY = 110
[2022-10-16 00:04:23,093] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getNoOfEmployeesbyPage; REQUESTBODY = ; RESPONSE CODE = 200; RESPONSEBODY = 110
[2022-10-16 00:08:18,031] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getNoOfEmployeesbyPage; REQUESTBODY = ; REQUESTPARAMETER = org.apache.tomcat.util.http.NamesEnumerator@482d4ac6 RESPONSE CODE = 200; RESPONSEBODY = 110
[2022-10-16 00:12:54,337] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= http://localhost:8080/api/v1/getNoOfEmployeesbyPage; REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = 110
[2022-10-16 00:14:29,083] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getNoOfEmployeesbyPage; PARAMETER =REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = 110
[2022-10-16 00:16:25,884] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=1&offset=10 REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = 110
[2022-10-16 00:35:45,243] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=1&offset=2; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 00:35:49,396] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=1&offset=2; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 00:36:07,832] [http-nio-8080-exec-6] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=1&offset=2; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 00:37:35,342] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"}]
[2022-10-16 00:37:39,668] [http-nio-8080-exec-3] ERROR com.example.logging.LoggingFilter                            :  Exception getting employees by age : javax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet
[2022-10-16 00:37:39,669] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=1&offset=2; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = 
[2022-10-16 00:41:03,735] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=1&offset=2; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"}]
[2022-10-16 00:44:13,901] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=1&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":7,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":8,"name":"POKEMON","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":9,"name":"LALA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":12,"name":"ASH","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":13,"name":"SASA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":14,"name":"LALAMOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":15,"name":"SUSUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"}]
[2022-10-16 00:44:35,241] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=2&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"}]
[2022-10-16 00:44:55,196] [http-nio-8080-exec-5] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=3&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":26,"name":"LALAMdaddaOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":27,"name":"SUSdadaUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":28,"name":"RWSddaS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":29,"name":"LAAAdadadSSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":30,"name":"DDDDssssA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":31,"name":"ASWdadaWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":32,"name":"DDSddasA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":33,"name":"DDSsdadAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":34,"name":"DDSAddadAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":35,"name":"DDSWddadQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"}]
[2022-10-16 00:45:25,115] [http-nio-8080-exec-6] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=2&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"}]
[2022-10-16 00:45:38,857] [http-nio-8080-exec-9] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=3&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":26,"name":"LALAMdaddaOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":27,"name":"SUSdadaUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":28,"name":"RWSddaS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":29,"name":"LAAAdadadSSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":30,"name":"DDDDssssA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":31,"name":"ASWdadaWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":32,"name":"DDSddasA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":33,"name":"DDSsdadAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":34,"name":"DDSAddadAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":35,"name":"DDSWddadQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"}]
[2022-10-16 00:45:48,031] [http-nio-8080-exec-10] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=4&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = []
[2022-10-16 00:46:09,740] [http-nio-8080-exec-4] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=4&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":36,"name":"POKEMOdadadaN","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"}]
[2022-10-16 00:58:09,668] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=4&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":36,"name":"POKEMOdadadaN","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"}]
[2022-10-16 00:58:13,518] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=2&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"}]
[2022-10-16 00:58:20,332] [http-nio-8080-exec-4] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":2,"name":"HI","age":22,"dob":"2022-09-02","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"},{"id":5,"name":"Orlando","age":25,"dob":"2022-09-05","telephoneNumber":"0314514123"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":7,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":8,"name":"POKEMON","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":9,"name":"LALA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":10,"name":"HAHAHA","age":24,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":11,"name":"COCKORACH","age":25,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":12,"name":"ASH","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":13,"name":"SASA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":14,"name":"LALAMOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":15,"name":"SUSUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":26,"name":"LALAMdaddaOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":27,"name":"SUSdadaUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":28,"name":"RWSddaS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":29,"name":"LAAAdadadSSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":30,"name":"DDDDssssA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":31,"name":"ASWdadaWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":32,"name":"DDSddasA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":33,"name":"DDSsdadAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":34,"name":"DDSAddadAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":35,"name":"DDSWddadQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":36,"name":"POKEMOdadadaN","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"}]
[2022-10-16 00:58:24,574] [http-nio-8080-exec-5] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=2&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"}]
[2022-10-16 00:58:27,407] [http-nio-8080-exec-6] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"}]
[2022-10-16 00:58:30,331] [http-nio-8080-exec-7] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":2,"name":"HI","age":22,"dob":"2022-09-02","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"},{"id":5,"name":"Orlando","age":25,"dob":"2022-09-05","telephoneNumber":"0314514123"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":7,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":8,"name":"POKEMON","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":9,"name":"LALA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":10,"name":"HAHAHA","age":24,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":11,"name":"COCKORACH","age":25,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":12,"name":"ASH","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":13,"name":"SASA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":14,"name":"LALAMOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":15,"name":"SUSUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":26,"name":"LALAMdaddaOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":27,"name":"SUSdadaUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":28,"name":"RWSddaS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":29,"name":"LAAAdadadSSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":30,"name":"DDDDssssA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":31,"name":"ASWdadaWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":32,"name":"DDSddasA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":33,"name":"DDSsdadAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":34,"name":"DDSAddadAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":35,"name":"DDSWddadQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":36,"name":"POKEMOdadadaN","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"}]
[2022-10-16 01:19:57,204] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/createDummyEmployeeExist; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 405; RESPONSEBODY = 
[2022-10-16 01:20:11,553] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/createDummyEmployeeExist; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = []
[2022-10-16 01:20:53,576] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/createDummyEmployeeExist; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = []
[2022-10-16 01:21:54,414] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/createDummyEmployeeExist; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = []
[2022-10-16 01:23:23,799] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/createDummyEmployeeExist; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = []
[2022-10-16 01:24:10,884] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/createDummyEmployeeExist; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = []
[2022-10-16 01:38:14,205] [http-nio-8080-exec-4] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/createDummyEmployeeExist; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = []
[2022-10-16 01:38:41,744] [http-nio-8080-exec-1] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : java.lang.IllegalArgumentException: Expected scheme-specific part at index 10: localhost:
[2022-10-16 01:38:41,756] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:40:15,706] [http-nio-8080-exec-1] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : java.lang.IllegalArgumentException: Expected scheme-specific part at index 10: localhost:
[2022-10-16 01:40:15,719] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:42:22,855] [http-nio-8080-exec-1] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : java.lang.IllegalArgumentException: Expected scheme-specific part at index 10: localhost:
[2022-10-16 01:42:22,871] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:45:25,905] [http-nio-8080-exec-2] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : java.lang.IllegalArgumentException: Expected scheme-specific part at index 10: localhost:
[2022-10-16 01:45:25,925] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:45:42,889] [http-nio-8080-exec-1] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.ResourceAccessException: I/O error on POST request for "https://localhost:8080/api/v1/findEmployee": Unsupported or unrecognized SSL message; nested exception is javax.net.ssl.SSLException: Unsupported or unrecognized SSL message
[2022-10-16 01:45:42,903] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:46:17,083] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 405; RESPONSEBODY = 
[2022-10-16 01:46:17,150] [http-nio-8080-exec-4] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$MethodNotAllowed: 405 : "{"timestamp":"2022-10-15T17:46:17.094+00:00","status":405,"error":"Method Not Allowed","trace":"org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported\r\n\tat org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:253)\r\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)\r\n\tat org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)\r\n\tat org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)\r\n\tat org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)\r\n\tat org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)\r\n\tat org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1265)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1047)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Request method 'POST' not supported","path":"/api/v1/findEmployee"}"
[2022-10-16 01:46:17,152] [http-nio-8080-exec-4] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:46:46,689] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 01:46:46,758] [http-nio-8080-exec-2] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : "{"timestamp":"2022-10-15T17:46:46.702+00:00","status":400,"error":"Bad Request","trace":"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)","path":"/api/v1/findEmployee"}"
[2022-10-16 01:46:46,765] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:48:08,973] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 01:48:26,617] [http-nio-8080-exec-2] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : "{"timestamp":"2022-10-15T17:48:08.981+00:00","status":400,"error":"Bad Request","trace":"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)","path":"/api/v1/findEmployee"}"
[2022-10-16 01:48:26,628] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:48:45,258] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 01:48:45,310] [http-nio-8080-exec-1] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : "{"timestamp":"2022-10-15T17:48:45.263+00:00","status":400,"error":"Bad Request","trace":"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)","path":"/api/v1/findEmployee"}"
[2022-10-16 01:48:45,314] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:50:00,980] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 01:50:57,580] [http-nio-8080-exec-2] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : "{"timestamp":"2022-10-15T17:50:00.986+00:00","status":400,"error":"Bad Request","trace":"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)","path":"/api/v1/findEmployee"}"
[2022-10-16 01:50:57,589] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:54:02,597] [http-nio-8080-exec-6] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =null; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 01:54:02,625] [http-nio-8080-exec-7] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 01:54:02,761] [http-nio-8080-exec-4] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : "{"timestamp":"2022-10-15T17:54:02.629+00:00","status":400,"error":"Bad Request","trace":"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)","path":"/api/v1/findEmployee"}"
[2022-10-16 01:54:02,766] [http-nio-8080-exec-4] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 01:54:16,136] [http-nio-8080-exec-8] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployeesbyAge; PARAMETER =pageNo=2&offset=10; REQUESTBODY = {
    "age": 23
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"}]
[2022-10-16 02:00:56,361] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 02:00:56,403] [http-nio-8080-exec-1] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : "{"timestamp":"2022-10-15T18:00:56.366+00:00","status":400,"error":"Bad Request","trace":"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)","path":"/api/v1/findEmployee"}"
[2022-10-16 02:00:56,407] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 02:08:11,713] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 400; RESPONSEBODY = 
[2022-10-16 02:08:11,747] [http-nio-8080-exec-2] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : "{"timestamp":"2022-10-15T18:08:11.718+00:00","status":400,"error":"Bad Request","trace":"org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:655)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat com.example.logging.LoggingFilter.doFilterInternal(LoggingFilter.java:26)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.base/java.lang.Thread.run(Thread.java:833)\r\n","message":"Required request body is missing: public java.util.List<com.example.entity.Employee> com.example.controller.EmployeeController.findEmployee(com.example.entity.Employee)","path":"/api/v1/findEmployee"}"
[2022-10-16 02:08:11,750] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 02:12:25,097] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":2,"name":"HI","age":22,"dob":"2022-09-02","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"},{"id":5,"name":"Orlando","age":25,"dob":"2022-09-05","telephoneNumber":"0314514123"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":7,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":8,"name":"POKEMON","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":9,"name":"LALA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":10,"name":"HAHAHA","age":24,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":11,"name":"COCKORACH","age":25,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":12,"name":"ASH","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":13,"name":"SASA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":14,"name":"LALAMOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":15,"name":"SUSUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":26,"name":"LALAMdaddaOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":27,"name":"SUSdadaUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":28,"name":"RWSddaS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":29,"name":"LAAAdadadSSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":30,"name":"DDDDssssA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":31,"name":"ASWdadaWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":32,"name":"DDSddasA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":33,"name":"DDSsdadAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":34,"name":"DDSAddadAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":35,"name":"DDSWddadQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":36,"name":"POKEMOdadadaN","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"}]
[2022-10-16 02:12:25,110] [http-nio-8080-exec-1] ERROR com.example.logging.LoggingFilter                            :  Exception when gettingList of Employees : org.springframework.web.client.RestClientException: Error while extracting response for type [class com.example.entity.Employee] and content type [application/json]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `com.example.entity.Employee` from Array value (token `JsonToken.START_ARRAY`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `com.example.entity.Employee` from Array value (token `JsonToken.START_ARRAY`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 1, column: 1]
[2022-10-16 02:12:25,111] [http-nio-8080-exec-1] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = FAILED NESTED API
[2022-10-16 02:13:48,846] [http-nio-8080-exec-7] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"}]
[2022-10-16 02:13:51,400] [http-nio-8080-exec-8] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":2,"name":"HI","age":22,"dob":"2022-09-02","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"},{"id":5,"name":"Orlando","age":25,"dob":"2022-09-05","telephoneNumber":"0314514123"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":7,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":8,"name":"POKEMON","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":9,"name":"LALA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":10,"name":"HAHAHA","age":24,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":11,"name":"COCKORACH","age":25,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":12,"name":"ASH","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":13,"name":"SASA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":14,"name":"LALAMOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":15,"name":"SUSUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":26,"name":"LALAMdaddaOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":27,"name":"SUSdadaUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":28,"name":"RWSddaS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":29,"name":"LAAAdadadSSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":30,"name":"DDDDssssA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":31,"name":"ASWdadaWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":32,"name":"DDSddasA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":33,"name":"DDSsdadAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":34,"name":"DDSAddadAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":35,"name":"DDSWddadQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":36,"name":"POKEMOdadadaN","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"}]
[2022-10-16 02:14:53,246] [http-nio-8080-exec-2] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/findEmployee; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = [{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"}]
[2022-10-16 02:14:57,429] [http-nio-8080-exec-4] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = GET; REQUESTURI= /api/v1/getEmployee; PARAMETER =null; REQUESTBODY = ;  RESPONSE CODE = 200; RESPONSEBODY = [{"id":1,"name":"ONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":2,"name":"HI","age":22,"dob":"2022-09-02","telephoneNumber":"0123105349"},{"id":3,"name":"MY","age":23,"dob":"2022-09-03","telephoneNumber":"012332319"},{"id":4,"name":"NAME","age":24,"dob":"2022-09-04","telephoneNumber":"0123105322"},{"id":5,"name":"Orlando","age":25,"dob":"2022-09-05","telephoneNumber":"0314514123"},{"id":6,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":7,"name":"POONG","age":23,"dob":"1998-07-01","telephoneNumber":"0123105349"},{"id":8,"name":"POKEMON","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":9,"name":"LALA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":10,"name":"HAHAHA","age":24,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":11,"name":"COCKORACH","age":25,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":12,"name":"ASH","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":13,"name":"SASA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":14,"name":"LALAMOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":15,"name":"SUSUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":16,"name":"RWSS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":17,"name":"LAAASSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":18,"name":"DDDDA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":19,"name":"ASWWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":20,"name":"DDSA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":21,"name":"DDSAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":22,"name":"DDSAAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":23,"name":"DDSWQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":24,"name":"ASHaadada","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":25,"name":"SAddadaSA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":26,"name":"LALAMdaddaOVE","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":27,"name":"SUSdadaUSUS","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":28,"name":"RWSddaS","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":29,"name":"LAAAdadadSSLA","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":30,"name":"DDDDssssA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":31,"name":"ASWdadaWQ","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":32,"name":"DDSddasA","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"},{"id":33,"name":"DDSsdadAWEE","age":23,"dob":"2022-09-03","telephoneNumber":"01233266319"},{"id":34,"name":"DDSAddadAA","age":23,"dob":"2022-09-04","telephoneNumber":"01515124349"},{"id":35,"name":"DDSWddadQQE","age":23,"dob":"2022-09-05","telephoneNumber":"03145144123"},{"id":36,"name":"POKEMOdadadaN","age":23,"dob":"2022-09-02","telephoneNumber":"01235605349"}]
[2022-10-16 02:14:57,445] [http-nio-8080-exec-3] INFO  com.example.logging.LoggingFilter                            :  filter Logs : METHOD = POST; REQUESTURI= /api/v1/nestedEmployeeAPI; PARAMETER =null; REQUESTBODY = {
   "id": 4
};  RESPONSE CODE = 200; RESPONSEBODY = SUCESSFULLY NESTED API
